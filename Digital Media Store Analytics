/* 
For this project, I downloaded a dataset called chinook from break into tech lecture.
Then I analyzed the data using multiple joins, common table expression, windows function, 
aggregate functions, and conditions to gather pertinent information from the dataset.
*/

--1. Show the names of sales agent, hire date, total sales amount, and rank each sales agent. 
--   The person with most sales will be rank 1.
SELECT 
  e.FirstName, 
  e.LastName,  
  e.HireDate, 
  ROUND(SUM(i.Total),2) AS total_sales,
  DENSE_RANK () OVER (ORDER BY ROUND(SUM(i.Total),2) DESC) Rank
FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY c.SupportRepId
ORDER BY Rank;

--2. Show customers (their full names, customer ID, and country) who are not in the US.
SELECT 
  FirstName || " " || LastName AS FullName, 
  CustomerId, 
  Country
FROM chinook.customers
WHERE COUNTRY != 'USA';

--3. Show only the Customers from Brazil. 
SELECT * FROM chinook.customers 
WHERE Country = 'Brazil';

--4. Find the invoices of customers who are from Brazil. 
--   The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT 
  c.FirstName || " " || c.LastName AS FullName, 
  i.InvoiceId, 
  i.InvoiceDate, 
  i.BillingCountry
FROM chinook.invoices i
LEFT JOIN chinook.customers c
ON i.CustomerId = c.CustomerId
WHERE c.Country = 'Brazil';

--5. Show the employees who are sales agents.
SELECT * FROM chinook.employees
WHERE Title = 'Sales Support Agent';

--6. Find a unique/distinct list of billing countries from the invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

--7. Provide a query that shows the invoices associated with each sales agent. 
--   The resulting table should include the sales agent's full name.
SELECT 
  i.invoiceId, 
  e.FirstName || " " || e.LastName AS SalesAgent_FullName
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = c.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId;

--8. Show the invoice total, customer name, country, and sales agent name for all invoices and customers.
SELECT 
  i.Total, 
  c.FirstName || " " || c.LastName AS Customer_FullName, 
  c.Country, 
  e.FirstName || " " || e.LastName AS SalesAgent_FullName
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = c.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId;

--9. How many invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--10. What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

--11. Write a query that includes the purchased track name with each invoice line ID.
SELECT 
  t.Name, 
  ii.InvoiceLineId
FROM chinook.invoice_items ii
LEFT JOIN chinook.tracks t
ON ii.TrackId = t.TrackId;

--12. Write a query that includes the purchased track name and artist name with each invoice line ID.
SELECT 
  t.Name AS track_name, 
  ar.Name AS artist_name, 
  ii.InvoiceLineId
FROM chinook.invoice_items ii
LEFT JOIN chinook.tracks t
ON ii.TrackId = t.TrackId
JOIN chinook.albums a
ON t.AlbumId = a.AlbumId
JOIN chinook.artists ar
ON a.ArtistId = ar.ArtistId;

--13. Provide a query that shows all the tracks, and include the album name, media type, and genre.
SELECT 
  t.Name AS track_name, 
  a.Title AS album_name, 
  mt.Name AS media_type, 
  g.Name AS genre
FROM chinook.tracks t
LEFT JOIN chinook.media_types mt
ON t.MediaTypeId = mt.MediaTypeId
JOIN chinook.genres g
ON t.GenreId = g.GenreId
JOIN chinook.albums a
ON t.AlbumId = a.AlbumId;

--14. Show the total sales made by each sales agent.
SELECT 
  ROUND(SUM(i.Total),2) AS total_sales, 
  e.FirstName || " " || e.LastName AS SalesAgent_FullName
FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY c.SupportRepId;

--15. Which sales agent made the most dollars in sales in 2009?
SELECT 
  ROUND(SUM(i.Total),2) AS YR2009_TotalSales, 
  e.FirstName || " " || e.LastName AS SalesAgent_fullName
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = c.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
WHERE e.Title = 'Sales Support Agent' AND i.InvoiceDate LIKE '2009%'
GROUP BY SupportRepId
ORDER BY ROUND(SUM(i.Total),2) DESC LIMIT 1;

--16. Show the top 5 customers who spent the most money, how much was spent in total, their email, and their phone number.
WITH top5_CTE AS (
SELECT 
  CustomerId, 
  SUM(Total) AS total_spent
FROM invoices i
GROUP BY CustomerId
ORDER BY SUM(Total) DESC LIMIT 5
)
SELECT 
  c.FirstName, 
  c.LastName, 
  cte.total_spent , 
  c.Email, 
  c.Phone
FROM customers c
JOIN top5_CTE cte
ON cte.CustomerId = c.CustomerId;
